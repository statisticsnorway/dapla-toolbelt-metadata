# coding: utf-8

"""
    Variable Definitions

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1
    Contact: metadata@ssb.no
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vardef_client.models.patch import Patch

class TestPatch(unittest.TestCase):
    """Patch unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Patch:
        """Test Patch
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Patch`
        """
        model = Patch()
        if include_optional:
            return Patch(
                name = vardef_client.models.language_string_type.LanguageStringType(
                    nb = '', 
                    nn = '', 
                    en = '', ),
                definition = vardef_client.models.language_string_type.LanguageStringType(
                    nb = '', 
                    nn = '', 
                    en = '', ),
                classification_reference = '',
                unit_types = [
                    ''
                    ],
                subject_fields = [
                    ''
                    ],
                contains_sensitive_personal_information = True,
                variable_status = 'DRAFT',
                measurement_type = '',
                valid_until = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                external_reference_uri = '',
                comment = vardef_client.models.language_string_type.LanguageStringType(
                    nb = '', 
                    nn = '', 
                    en = '', ),
                related_variable_definition_uris = [
                    ''
                    ],
                owner = {"team":"play-obr-b","groups":["play-obr-b-developers"]},
                contact = vardef_client.models.contact.Contact(
                    title = vardef_client.models.language_string_type.LanguageStringType(
                        nb = '', 
                        nn = '', 
                        en = '', ), 
                    email = '', )
            )
        else:
            return Patch(
        )
        """

    def testPatch(self):
        """Test Patch"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
