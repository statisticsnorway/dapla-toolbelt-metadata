"""Variable Definitions

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 0.1
Contact: metadata@ssb.no
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""

import unittest

from ..models.complete_response import CompleteResponse


class TestCompleteResponse(unittest.TestCase):
    """CompleteResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CompleteResponse:
        """Test CompleteResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included
        """
        # uncomment below to create an instance of `CompleteResponse`
        """
        model = CompleteResponse()
        if include_optional:
            return CompleteResponse(
                id = '',
                patch_id = 1,
                name = vardef_client.models.language_string_type.LanguageStringType(
                    nb = '', 
                    nn = '', 
                    en = '', ),
                short_name = '',
                definition = vardef_client.models.language_string_type.LanguageStringType(
                    nb = '', 
                    nn = '', 
                    en = '', ),
                classification_reference = '',
                unit_types = [
                    ''
                    ],
                subject_fields = [
                    ''
                    ],
                contains_sensitive_personal_information = True,
                variable_status = 'DRAFT',
                measurement_type = '',
                valid_from = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                valid_until = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                external_reference_uri = '',
                comment = vardef_client.models.language_string_type.LanguageStringType(
                    nb = '', 
                    nn = '', 
                    en = '', ),
                related_variable_definition_uris = [
                    ''
                    ],
                owner = {"team":"play-obr-b","groups":["play-obr-b-developers"]},
                contact = vardef_client.models.contact.Contact(
                    title = vardef_client.models.language_string_type.LanguageStringType(
                        nb = '', 
                        nn = '', 
                        en = '', ), 
                    email = '', ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by = {"code":"ano@ssb.no","name":"Ola Nordmann"},
                last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_updated_by = {"code":"ano@ssb.no","name":"Ola Nordmann"}
            )
        else:
            return CompleteResponse(
                patch_id = 1,
                name = vardef_client.models.language_string_type.LanguageStringType(
                    nb = '', 
                    nn = '', 
                    en = '', ),
                short_name = '',
                definition = vardef_client.models.language_string_type.LanguageStringType(
                    nb = '', 
                    nn = '', 
                    en = '', ),
                unit_types = [
                    ''
                    ],
                subject_fields = [
                    ''
                    ],
                contains_sensitive_personal_information = True,
                valid_from = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                owner = {"team":"play-obr-b","groups":["play-obr-b-developers"]},
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testCompleteResponse(self):
        """Test CompleteResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
